
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Trips Collection Rules
    match /trips/{tripId} {
      // READ: A user can read a trip document if their UID is in the 'collaborators' array.
      // This covers both single-document reads (get) and collection queries (list).
      allow read: if request.auth != null && request.auth.uid in resource.data.collaborators;

      // CREATE: A user can create a trip document if they are authenticated and the 'ownerId'
      // they are setting is their own UID. They must also include themselves in the collaborators list.
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid && request.auth.uid in request.resource.data.collaborators;

      // UPDATE: A user can update a trip document if they are the original owner.
      // We protect the ownerId and creation time from being changed.
      allow update: if request.auth != null && resource.data.ownerId == request.auth.uid
                    && request.resource.data.ownerId == resource.data.ownerId
                    && request.resource.data.createdAt == resource.data.createdAt;
      
      // DELETE: A user can delete a trip document only if they are the original owner.
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    // Default deny all other collections.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
